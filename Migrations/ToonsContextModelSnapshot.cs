// <auto-generated />
using Api4u.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api4u.Migrations
{
    [DbContext(typeof(ToonsContext))]
    partial class ToonsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api4u.Models.Countries.City", b =>
                {
                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("CityName");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityName = "Los Angeles",
                            ProvinceId = 2
                        },
                        new
                        {
                            CityName = "San Francisco",
                            ProvinceId = 2
                        },
                        new
                        {
                            CityName = "San Diego",
                            ProvinceId = 2
                        },
                        new
                        {
                            CityName = "Xiamen",
                            ProvinceId = 4
                        },
                        new
                        {
                            CityName = "Quanzhou",
                            ProvinceId = 4
                        },
                        new
                        {
                            CityName = "Ottawa",
                            ProvinceId = 6
                        },
                        new
                        {
                            CityName = "Windsor",
                            ProvinceId = 6
                        },
                        new
                        {
                            CityName = "Kingston",
                            ProvinceId = 6
                        },
                        new
                        {
                            CityName = "Mississauga",
                            ProvinceId = 6
                        },
                        new
                        {
                            CityName = "Hamilton",
                            ProvinceId = 6
                        });
                });

            modelBuilder.Entity("Api4u.Models.Countries.Continent", b =>
                {
                    b.Property<string>("ContinentName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ContinentName");

                    b.ToTable("Continent");

                    b.HasData(
                        new
                        {
                            ContinentName = "Africa"
                        },
                        new
                        {
                            ContinentName = "Asia"
                        },
                        new
                        {
                            ContinentName = "Europe"
                        },
                        new
                        {
                            ContinentName = "South America"
                        },
                        new
                        {
                            ContinentName = "Australia"
                        },
                        new
                        {
                            ContinentName = "North America"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Countries.Country", b =>
                {
                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AreaSqKm")
                        .HasColumnType("int");

                    b.Property<string>("CapitalCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContinentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryName");

                    b.HasIndex("ContinentName");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryName = "Canada",
                            AreaSqKm = 9976140,
                            CapitalCity = "Ottawa",
                            ContinentName = "North America"
                        },
                        new
                        {
                            CountryName = "USA",
                            AreaSqKm = 9629091,
                            CapitalCity = "Washington DC",
                            ContinentName = "North America"
                        },
                        new
                        {
                            CountryName = "Brazil",
                            AreaSqKm = 8511965,
                            CapitalCity = "Brasilia",
                            ContinentName = "South America"
                        },
                        new
                        {
                            CountryName = "India",
                            AreaSqKm = 3287590,
                            CapitalCity = "New Delhi",
                            ContinentName = "Asia"
                        },
                        new
                        {
                            CountryName = "China",
                            AreaSqKm = 9596960,
                            CapitalCity = "Beijing",
                            ContinentName = "Asia"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Countries.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CapitalCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.HasIndex("CountryName");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            ProvinceId = 1,
                            CapitalCity = "Montgomery",
                            CountryName = "USA",
                            Name = "Aalabama"
                        },
                        new
                        {
                            ProvinceId = 2,
                            CapitalCity = "Sacramento",
                            CountryName = "USA",
                            Name = "California"
                        },
                        new
                        {
                            ProvinceId = 3,
                            CapitalCity = "Honolulu",
                            CountryName = "USA",
                            Name = "Hawaii"
                        },
                        new
                        {
                            ProvinceId = 4,
                            CapitalCity = "Fuzhou",
                            CountryName = "China",
                            Name = "Fujian"
                        },
                        new
                        {
                            ProvinceId = 5,
                            CapitalCity = "Wuhan",
                            CountryName = "China",
                            Name = "Hubei"
                        },
                        new
                        {
                            ProvinceId = 6,
                            CapitalCity = "Toronto",
                            CountryName = "Canada",
                            Name = "Ontario"
                        },
                        new
                        {
                            ProvinceId = 7,
                            CapitalCity = "Edmopnton",
                            CountryName = "Canada",
                            Name = "Alberta"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Courses.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = "COMP2910",
                            InstructorId = 1,
                            Name = "Project Management"
                        },
                        new
                        {
                            CourseId = "COMP3973",
                            InstructorId = 2,
                            Name = "ASP.NET"
                        },
                        new
                        {
                            CourseId = "COMP3717",
                            InstructorId = 3,
                            Name = "Android"
                        },
                        new
                        {
                            CourseId = "COMP1536",
                            InstructorId = 4,
                            Name = "HTML & CSS"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Courses.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            Email = "zhang.liu@qq.com",
                            FirstName = "Zhang",
                            LastName = "Liu"
                        },
                        new
                        {
                            InstructorId = 2,
                            Email = "jin.ling@123.com",
                            FirstName = "Jin",
                            LastName = "Ling"
                        },
                        new
                        {
                            InstructorId = 3,
                            Email = "sam.sun@gmail.com",
                            FirstName = "Sam",
                            LastName = "Sun"
                        },
                        new
                        {
                            InstructorId = 4,
                            Email = "ann.fox@outlook.com",
                            FirstName = "Ann",
                            LastName = "Fox"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Foods.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FoodCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("FoodId");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            FoodCategoryId = 1,
                            Name = "Croissant",
                            Unit = "dozen",
                            UnitPrice = 9.98f
                        },
                        new
                        {
                            FoodId = 2,
                            FoodCategoryId = 3,
                            Name = "Carrots",
                            Unit = "lbs",
                            UnitPrice = 0.98f
                        },
                        new
                        {
                            FoodId = 3,
                            FoodCategoryId = 2,
                            Name = "Apples",
                            Unit = "lbs",
                            UnitPrice = 0.65f
                        });
                });

            modelBuilder.Entity("Api4u.Models.Foods.FoodCategory", b =>
                {
                    b.Property<int>("FoodCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodCategoryId");

                    b.ToTable("FoodCategories");

                    b.HasData(
                        new
                        {
                            FoodCategoryId = 1,
                            Description = @"Bakery products, which include bread, rolls, 
                cookies, pies, pastries, and muffins, are usually prepared from flour 
                or meal derived from some form of grain. Bread, already a common 
                staple in prehistoric times, provides many nutrients in the human diet.",
                            Name = "Bakery"
                        },
                        new
                        {
                            FoodCategoryId = 2,
                            Description = @"The sweet 
                and fleshy product of a tree or other plant that contains seed 
                and can be eaten as food.",
                            Name = "Fruit"
                        },
                        new
                        {
                            FoodCategoryId = 3,
                            Description = @"A plant 
                or part of a plant used as food, typically as accompaniment to meat 
                or fish, such as a cabbage, potato, carrot, or bean.",
                            Name = "Vegetables"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Movies.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("ActorId");

                    b.HasIndex("MovieId");

                    b.ToTable("Actor");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            FirstName = "Ben",
                            LastName = "Kingsley",
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 2,
                            FirstName = "John",
                            LastName = "Gielgud",
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 3,
                            FirstName = "Rohini",
                            LastName = "Hattangadi",
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 4,
                            FirstName = "Julie",
                            LastName = "Andrews",
                            MovieId = 2
                        },
                        new
                        {
                            ActorId = 5,
                            FirstName = "Christopher",
                            LastName = "Plummer",
                            MovieId = 2
                        },
                        new
                        {
                            ActorId = 6,
                            FirstName = "Audrey",
                            LastName = "Hepburn",
                            MovieId = 3
                        },
                        new
                        {
                            ActorId = 7,
                            FirstName = "Rex",
                            LastName = "Harrison",
                            MovieId = 3
                        });
                });

            modelBuilder.Entity("Api4u.Models.Movies.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DirectorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectorLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            DirectorFirstName = "Richard",
                            DirectorLastName = "Attenborough",
                            Name = "Gandhi",
                            Rating = "PG",
                            Year = 1982
                        },
                        new
                        {
                            MovieId = 2,
                            DirectorFirstName = "Robert",
                            DirectorLastName = "Wise",
                            Name = "The Sound of Music",
                            Rating = "G",
                            Year = 196
                        },
                        new
                        {
                            MovieId = 3,
                            DirectorFirstName = "George",
                            DirectorLastName = "Cukor",
                            Name = "My Fair Lady",
                            Rating = "PG",
                            Year = 1964
                        },
                        new
                        {
                            MovieId = 4,
                            DirectorFirstName = "Walter",
                            DirectorLastName = "Lang",
                            Name = "The King and I",
                            Rating = "G",
                            Year = 1956
                        },
                        new
                        {
                            MovieId = 5,
                            DirectorFirstName = "Hugh",
                            DirectorLastName = "Hudson",
                            Name = "Chariots of Fire",
                            Rating = "PG",
                            Year = 1981
                        },
                        new
                        {
                            MovieId = 6,
                            DirectorFirstName = "Stanley",
                            DirectorLastName = "Kubrick",
                            Name = "Spartacus",
                            Rating = "PG",
                            Year = 1960
                        });
                });

            modelBuilder.Entity("Api4u.Models.Species.Organism", b =>
                {
                    b.Property<int>("OrganismId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrganismId");

                    b.HasIndex("SpecieName");

                    b.ToTable("Organism");

                    b.HasData(
                        new
                        {
                            OrganismId = 1,
                            Name = "Australian brush turkey",
                            SpecieName = "Bird"
                        },
                        new
                        {
                            OrganismId = 2,
                            Name = "Egyptian plover",
                            SpecieName = "Bird"
                        },
                        new
                        {
                            OrganismId = 3,
                            Name = "White stork",
                            SpecieName = "Bird"
                        },
                        new
                        {
                            OrganismId = 4,
                            Name = "Kingfisher",
                            SpecieName = "Bird"
                        },
                        new
                        {
                            OrganismId = 5,
                            Name = "Atlantic salmon",
                            SpecieName = "Fish"
                        },
                        new
                        {
                            OrganismId = 6,
                            Name = "Great white shark",
                            SpecieName = "Fish"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Species.Specie", b =>
                {
                    b.Property<string>("SpecieName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SpecieName");

                    b.ToTable("Specie");

                    b.HasData(
                        new
                        {
                            SpecieName = "Bird"
                        },
                        new
                        {
                            SpecieName = "Mammal"
                        },
                        new
                        {
                            SpecieName = "Insect"
                        },
                        new
                        {
                            SpecieName = "Reptile"
                        },
                        new
                        {
                            SpecieName = "Fish"
                        },
                        new
                        {
                            SpecieName = "Amphibians"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Students.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Api4u.Models.Toons.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Api4u.Models.Vehicles.Vehicle", b =>
                {
                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fuel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleManufacturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Model");

                    b.HasIndex("VehicleManufacturerName");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Model = "Corolla",
                            Fuel = "Gas",
                            Type = "Sedan",
                            VehicleManufacturerName = "Toyota"
                        },
                        new
                        {
                            Model = "Rav4",
                            Fuel = "Gas",
                            Type = "SUV",
                            VehicleManufacturerName = "Toyota"
                        },
                        new
                        {
                            Model = "Soul",
                            Fuel = "Electric",
                            Type = "SUV",
                            VehicleManufacturerName = "Kia"
                        },
                        new
                        {
                            Model = "Model S",
                            Fuel = "Electric",
                            Type = "Sedan",
                            VehicleManufacturerName = "Tesla"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Vehicles.VehicleManufacturer", b =>
                {
                    b.Property<string>("VehicleManufacturerName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleManufacturerName");

                    b.ToTable("VehicleManufacturers");

                    b.HasData(
                        new
                        {
                            VehicleManufacturerName = "Toyota",
                            Country = "Japan"
                        },
                        new
                        {
                            VehicleManufacturerName = "Kia",
                            Country = "South Korea"
                        },
                        new
                        {
                            VehicleManufacturerName = "Renault",
                            Country = "France"
                        },
                        new
                        {
                            VehicleManufacturerName = "Mercedes",
                            Country = "Germany"
                        },
                        new
                        {
                            VehicleManufacturerName = "Tesla",
                            Country = "USA"
                        });
                });

            modelBuilder.Entity("Api4u.Models.Countries.City", b =>
                {
                    b.HasOne("Api4u.Models.Countries.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api4u.Models.Countries.Country", b =>
                {
                    b.HasOne("Api4u.Models.Countries.Continent", "Continent")
                        .WithMany()
                        .HasForeignKey("ContinentName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api4u.Models.Countries.Province", b =>
                {
                    b.HasOne("Api4u.Models.Countries.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api4u.Models.Courses.Course", b =>
                {
                    b.HasOne("Api4u.Models.Courses.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api4u.Models.Foods.Food", b =>
                {
                    b.HasOne("Api4u.Models.Foods.FoodCategory", "FoodCategory")
                        .WithMany()
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api4u.Models.Movies.Actor", b =>
                {
                    b.HasOne("Api4u.Models.Movies.Movie", "Movie")
                        .WithMany("Actors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api4u.Models.Species.Organism", b =>
                {
                    b.HasOne("Api4u.Models.Species.Specie", "Specie")
                        .WithMany()
                        .HasForeignKey("SpecieName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api4u.Models.Vehicles.Vehicle", b =>
                {
                    b.HasOne("Api4u.Models.Vehicles.VehicleManufacturer", "VehicleManufacturer")
                        .WithMany()
                        .HasForeignKey("VehicleManufacturerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
